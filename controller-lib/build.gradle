apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'

def versionMajor = 0
def versionMinor = 0
def versionPatch = 5

def versionName = { ->
	return "${versionMajor}.${versionMinor}.${versionPatch}"
}

def versionNameBuild = { ->
	def env = System.getenv();

	if (env['BUILD_NAME']) {
		return "${versionMajor}.${versionMinor}.${versionPatch}-${env['BUILD_NAME']}"
	} else {
		return "${versionMajor}.${versionMinor}.${versionPatch}"
	}
}

task(dada) << {
	println ${versionNameBuild}
}

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 22
        versionCode 1
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:22.1.1'
    compile 'com.wnafee:vector-compat:1.0.5'
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
project.version = versionName()
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = "android"
        name = "controller-lib"
        websiteUrl = "https://github.com/Unic8/controller-lib"
        issueTrackerUrl = 'https://github.com/Unic8/controller-lib/issues'
        vcsUrl = "https://github.com/Unic8/controller-lib.git"
        licenses = ["Apache-2.0"]
        publish = true
        version {
            name = versionNameBuild()
//            desc = //Optional - Version-specific description'
//                    released  = //Optional - Date of the version release. 2 possible values: date in the format of 'yyyy-MM-dd'T'HH:mm:ss.SSSZZ' OR a java.util.Date instance
            vcsTag = versionName()

            //Optional configuration for GPG signing
            gpg {
                sign = true
            }
            //Optional configuration for Maven Central sync of the version
//            mavenCentralSync {
//                sync = true //Optional (true by default). Determines whether to sync the version to Maven Central.
//                user = 'userToken' //OSS user token
//                password = 'paasword' //OSS user password
//                close = '1' //Optional property. By default the staging repository is closed and artifacts are released to Maven Central. You can optionally turn this behaviour off (by puting 0 as value) and release the version manually.
//            }
        }
    }
}